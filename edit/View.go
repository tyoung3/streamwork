/* package edit is generated by StreamWork.*/
package edit

/*  Generated StreamWork component, View,
    by sw.sh on Wed Jun 26 19:56:37 EDT 2019
	1  input  ports
	1 output ports
*/

import (
	"fmt"
	"sync"
)

func View(wg *sync.WaitGroup, arg []string, cs []chan interface{}) {
	
	var domore bool = true
	
	defer wg.Done()
	cfg := pkgConfig("/home/tyoung3/.sw/edit.toml")
	bs, _ := cfg.IntOr("edit.buffersize", 1)
	fmt.Println(
		"\u001b[33mRunning", arg[0], version, 
		"bs =", bs,"\u001b[0m")
	
	for domore   {
		select {
		case 	cs[1] <- 1:
			fmt.Println("\u001b[33mclosing\u001b[0m")
			//close (cs[1]) 
		case ip, ok := <-cs[0]:
			if ok != true {
				domore = false
			} else {
				fmt.Println("\u001b[33mView/chan:", 0, "IP:", ip,"\u001b[0m")
			}
		}
	}	
		
		
	// cs[1] <- 5
	// close (cs[1])
		
/*
	j := 0
	for j >= 0 {
			ip, ok := <-cs[j]
			if ok != true {
				break
			}
			fmt.Println(arg[0], "chan::", j, "IP:", ip)
		j--
	}
	cs[1] <- 1
*/	
	fmt.Println("\u001b[33mView done.\u001b[0m")
}
